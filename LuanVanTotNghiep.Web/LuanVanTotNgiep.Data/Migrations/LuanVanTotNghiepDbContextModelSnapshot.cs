// <auto-generated />
using System;
using LuanVanTotNghiep.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LuanVanTotNghiep.Data.Migrations
{
    [DbContext(typeof(LuanVanTotNghiepDbContext))]
    partial class LuanVanTotNghiepDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.AccountDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPersion")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.BillCheckoutProductDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<double>("TotalBill")
                        .HasColumnType("float");

                    b.Property<int>("TotalProducts")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BillCheckoutProducts");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.BillDetailCheckoutProductDTO", b =>
                {
                    b.Property<int>("IdCheckout")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("AmountProduct")
                        .HasColumnType("int");

                    b.Property<double>("TotalBill")
                        .HasColumnType("float");

                    b.HasKey("IdCheckout", "IdProduct");

                    b.HasIndex("IdProduct");

                    b.ToTable("BillDetailCheckoutProducts");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.CommentProductDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BlockComments")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EvaluationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<string>("Messages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdProduct");

                    b.ToTable("CommentProducts");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.ContactDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ContactDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.CustomerDTO", b =>
                {
                    b.Property<int>("IdCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("PassWp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCustomer");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.DetailProductDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountProduct")
                        .HasColumnType("int");

                    b.Property<string>("CodeProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryProduct")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdBrands")
                        .HasColumnType("int");

                    b.Property<int?>("IdComment")
                        .HasColumnType("int");

                    b.Property<int?>("IdDatHang")
                        .HasColumnType("int");

                    b.Property<int?>("IdListImage")
                        .HasColumnType("int");

                    b.Property<int?>("IdManufacturers")
                        .HasColumnType("int");

                    b.Property<int?>("IdMass")
                        .HasColumnType("int");

                    b.Property<int?>("IdSaleOff")
                        .HasColumnType("int");

                    b.Property<int?>("IdSmallSubCategory")
                        .HasColumnType("int");

                    b.Property<int?>("ManufacturersId")
                        .HasColumnType("int");

                    b.Property<double>("MassProduct")
                        .HasColumnType("float");

                    b.Property<string>("NameProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PriceProduct")
                        .HasColumnType("float");

                    b.Property<double>("PriceSaleOffProduct")
                        .HasColumnType("float");

                    b.Property<DateTime>("ProductAddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductBrandsId")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SaleOffProductId")
                        .HasColumnType("int");

                    b.Property<int?>("SmallSubCategoryId")
                        .HasColumnType("int");

                    b.Property<bool?>("StatusProduct")
                        .HasColumnType("bit");

                    b.Property<string>("UrlImageProduct")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturersId");

                    b.HasIndex("ProductBrandsId");

                    b.HasIndex("SaleOffProductId");

                    b.HasIndex("SmallSubCategoryId");

                    b.ToTable("DetailProducts");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.ListProductImageDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IsProductImageId")
                        .HasColumnType("int");

                    b.Property<string>("NameImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsProductImageId");

                    b.ToTable("ListProductImages");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.ManufacturerDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameManufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlManufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.MassProductDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("MassProduct")
                        .HasColumnType("float");

                    b.Property<int?>("MassProductsId")
                        .HasColumnType("int");

                    b.Property<string>("UnitMass")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MassProductsId");

                    b.ToTable("MassProducts");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.ParentCategoryDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdSubCategory")
                        .HasColumnType("int");

                    b.Property<string>("NameCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParentCategorys");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.ProductBrandsDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameBrands")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlBrands")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductBrands");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.SaleOffProductDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PromotionDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PromotionExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("SaleOff")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("SaleOffProducts");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.SmallSubCategoryDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int?>("IdSubCategory")
                        .HasColumnType("int");

                    b.Property<string>("NameCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubCategorysId")
                        .HasColumnType("int");

                    b.Property<string>("UrlCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubCategorysId");

                    b.ToTable("SmallSubCategorys");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.SubCategoryDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdParentCategory")
                        .HasColumnType("int");

                    b.Property<int?>("IdSmallSub")
                        .HasColumnType("int");

                    b.Property<string>("NameCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategorysId")
                        .HasColumnType("int");

                    b.Property<string>("UrlCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategorysId");

                    b.ToTable("SubCategorys");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.BillDetailCheckoutProductDTO", b =>
                {
                    b.HasOne("LuanVanTotNghiep.DTOs.BillCheckoutProductDTO", "BillDetailCheckout")
                        .WithMany("DetailCheckoutNavigation")
                        .HasForeignKey("IdCheckout")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LuanVanTotNghiep.DTOs.DetailProductDTO", "BillDetailProduct")
                        .WithMany("DetaiCheckoutNavigation")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillDetailCheckout");

                    b.Navigation("BillDetailProduct");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.CommentProductDTO", b =>
                {
                    b.HasOne("LuanVanTotNghiep.DTOs.DetailProductDTO", "IsComments")
                        .WithMany("CommentsNavigation")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IsComments");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.DetailProductDTO", b =>
                {
                    b.HasOne("LuanVanTotNghiep.DTOs.ManufacturerDTO", "Manufacturers")
                        .WithMany("ManufacturerNavigation")
                        .HasForeignKey("ManufacturersId");

                    b.HasOne("LuanVanTotNghiep.DTOs.ProductBrandsDTO", "ProductBrands")
                        .WithMany("ProductBrandsNavigation")
                        .HasForeignKey("ProductBrandsId");

                    b.HasOne("LuanVanTotNghiep.DTOs.SaleOffProductDTO", "SaleOffProduct")
                        .WithMany("SaleOffProductNavigation")
                        .HasForeignKey("SaleOffProductId");

                    b.HasOne("LuanVanTotNghiep.DTOs.SmallSubCategoryDTO", "SmallSubCategory")
                        .WithMany("ProductNavigation")
                        .HasForeignKey("SmallSubCategoryId");

                    b.Navigation("Manufacturers");

                    b.Navigation("ProductBrands");

                    b.Navigation("SaleOffProduct");

                    b.Navigation("SmallSubCategory");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.ListProductImageDTO", b =>
                {
                    b.HasOne("LuanVanTotNghiep.DTOs.DetailProductDTO", "IsProductImage")
                        .WithMany("ListImageNavigation")
                        .HasForeignKey("IsProductImageId");

                    b.Navigation("IsProductImage");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.MassProductDTO", b =>
                {
                    b.HasOne("LuanVanTotNghiep.DTOs.DetailProductDTO", "MassProducts")
                        .WithMany("MassNavigation")
                        .HasForeignKey("MassProductsId");

                    b.Navigation("MassProducts");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.SmallSubCategoryDTO", b =>
                {
                    b.HasOne("LuanVanTotNghiep.DTOs.SubCategoryDTO", "SubCategorys")
                        .WithMany("SmallSubCategoryNavigation")
                        .HasForeignKey("SubCategorysId");

                    b.Navigation("SubCategorys");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.SubCategoryDTO", b =>
                {
                    b.HasOne("LuanVanTotNghiep.DTOs.ParentCategoryDTO", "ParentCategorys")
                        .WithMany("SubCategoryNavigation")
                        .HasForeignKey("ParentCategorysId");

                    b.Navigation("ParentCategorys");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.BillCheckoutProductDTO", b =>
                {
                    b.Navigation("DetailCheckoutNavigation");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.DetailProductDTO", b =>
                {
                    b.Navigation("CommentsNavigation");

                    b.Navigation("DetaiCheckoutNavigation");

                    b.Navigation("ListImageNavigation");

                    b.Navigation("MassNavigation");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.ManufacturerDTO", b =>
                {
                    b.Navigation("ManufacturerNavigation");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.ParentCategoryDTO", b =>
                {
                    b.Navigation("SubCategoryNavigation");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.ProductBrandsDTO", b =>
                {
                    b.Navigation("ProductBrandsNavigation");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.SaleOffProductDTO", b =>
                {
                    b.Navigation("SaleOffProductNavigation");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.SmallSubCategoryDTO", b =>
                {
                    b.Navigation("ProductNavigation");
                });

            modelBuilder.Entity("LuanVanTotNghiep.DTOs.SubCategoryDTO", b =>
                {
                    b.Navigation("SmallSubCategoryNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
